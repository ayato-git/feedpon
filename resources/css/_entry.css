.entry {
  position: relative;
  padding: calc(var(--baseline-height) / 2) 0 calc(var(--baseline-height) / 2 - 1px);
  border-bottom: 1px solid var(--medium-dark-color);
  transition: box-shadow 0.2s ease-in-out;
}

.entry.is-active {
  box-shadow: 0 2px 18px var(--shadow-color),
              0 0 6px var(--shadow-color);
  z-index: 10;
}

.entry.is-pinned {
  box-shadow: 6px 0 0 var(--positive-background-color) inset;
}

.entry.is-pinned.is-active {
  box-shadow: 6px 0 0 var(--positive-background-color) inset,
              0 2px 18px var(--shadow-color),
              0 0 6px var(--shadow-color);
}

.entry.is-unread {
  & .entry-title::after {
    content: '\00a0*';
    color: var(--negative-color);
  }
}

.entry.is-marked-as-read {
  & .entry-title {
    color: var(--dark-color);
  }
}

.entry.is-collapsible:not(.is-expanded) {
  cursor: pointer;
}

.entry.is-expanded {
  padding: var(--baseline-height) 0 calc(var(--baseline-height) - 1px);

  & .entry-header {
    margin-bottom: var(--baseline-height);
  }

  & .entry-title {
    font-size: 1.25rem;
  }

  & .entry-summary,
  & .entry-action-open-external-link {
    display: none;
  }
}

.entry.is-expanded:not(.is-collapsible) {
  & .entry-action-close {
    display: none;
  }
}

.entry:not(.is-expanded) {
  & .entry-content,
  & .entry-footer,
  & .entry-action-close,
  & .entry-action-fetch-full-content {
    display: none;
  }
}

.entry:hover .entry-nav {
  visibility: visible;
}

.entry-nav {
  display: flex;
  float: right;
  visibility: hidden;
  padding-left: 8px;
}

.entry-action,
a.entry-action {
  position: relative;
  display: flex;
  box-sizing: border-box;
  align-items: center;
  justify-content: center;
  color: inherit;
  width: 36px;
  height: 36px;
  border: 1px solid var(--medium-dark-color);
  border-radius: 100%;
  transition: color 0.2s ease-in-out,
              background-color 0.2s ease-in-out,
              border-color 0.2s ease-in-out;
}

.entry-action:active {
  background-color: var(--positive-background-color);
}

.entry-action:focus {
  outline: none;
}

.entry-action:hover {
  color: var(--positive-color);
  border-color: var(--positive-color);
}

.entry-action + .entry-action {
  margin-left: 8px;
}

.entry-action.is-selected,
a.entry-action.is-selected {
  color: var(--default-background-color);
  background-color: var(--positive-color);
  border-color: var(--positive-color);
}

.entry-action.is-selected:hover {
  background-color: var(--positive-hover-color);
}

.entry-action.is-selected:active {
  background-color: var(--positive-active-color);
}

.entry-title {
  margin: 0;
  font-size: inherit;
  font-weight: 600;
  line-height: inherit;
}

.entry-title > a {
  color: inherit;
  text-decoration: none;
}

.entry-title > a:hover {
  color: var(--positive-color);
}

.entry-metadata {
  color: var(--dark-color);
}

.entry-bookmarks {
  padding: 2px;
  border-radius: 4px;
}

.entry-bookmarks.is-bookmarked {
  color: var(--negative-color);
}

.entry-bookmarks.is-popular {
  font-weight: 600;
  background-color: var(--negative-background-color);
}

.entry-summary {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.entry-content {
  margin: 0 0 var(--baseline-height);
  hyphens: auto;
  overflow-wrap: break-word;
  text-align: justify;
  text-justify: inter-ideograph;
}

.entry-content img,
.entry-content video {
  max-width: 100%;
  height: auto;
}

.entry-page:first-child .entry-page-header {
  display: none;
}

.entry-page-header {
  overflow: hidden;
  text-align: center;
}

.entry-page-title {
  display: inline-block;
  padding: 0 1rem;
  margin: var(--baseline-height) 0;
  position: relative;
  font-variant: small-caps;
  text-transform: lowercase;
}

.entry-page-title::before,
.entry-page-title::after {
  content: '';
  display: block;
  position: absolute;
  top: 50%;
  width: 100vw;
  height: 1px;
  background: var(--medium-dark-color);
}

.entry-page-title::before {
  right: 100%;
}

.entry-page-title::after {
  left: 100%;
}

.entry-action-list {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: calc(var(--baseline-height) * 2);
}
